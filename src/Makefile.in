#    @WARNING1@
#    @WARNING2@
#===============================================================================
# FILE: Makefile.in
#
# PURPOSE: Template for src/Makefile.  When 'configure' is run, a new Makefile
# will be created (overwriting the last) from this template.
#
#-------------------  object files  --------------------------------------------
CORE_OBJ = main.o global.o grid3D.o initial_conditions.o boundary_conditions.o CTU_1D.o CTU_2D.o CTU_3D.o plmp.o plmc.o ppmp.o ppmc.o exact.o roe.o cooling_cpu.o subgrid_routines_2D.o subgrid_routines_3D.o  mpi_routines.o mpi_boundaries.o MPI_Comm_node.o io_mpi.o io.o error_handling.o rng.o global_cuda.o CTU_1D_cuda.o CTU_2D_cuda.o CTU_3D_cuda.o VL_1D_cuda.o VL_2D_cuda.o VL_3D_cuda.o pcm_cuda.o plmp_ctu_cuda.o plmc_ctu_cuda.o plmp_vl_cuda.o ppmp_ctu_cuda.o ppmc_ctu_cuda.o ppmp_vl_cuda.o ppmc_vl_cuda.o exact_cuda.o roe_cuda.o h_correction_2D_cuda.o h_correction_3D_cuda.o cooling_cuda.o cuda_mpi_routines.o


ALL_OBJ = ${CORE_OBJ} 

#-------------------  macro definitions  ---------------------------------------

BIN = ${EXEDIR}cholla
EXEDIR = ../bin/
SRC = $(ALL_OBJ:.o=.c)

include ../Makeoptions

#--------------------  implicit rules  -----------------------------------------

%.o:	%.c
		$(CC) $(CFLAGS)  $(INCL)  -c $< -o $@ 

%.o:	%.cpp
		$(CXX) $(CXXFLAGS)  $(INCL)  -c $< -o $@ 

%.o:	%.cu
		$(NVCC) $(NVCCFLAGS)  $(INCL)  -c $< -o $@ 

#---------------------  targets  -----------------------------------------------

all:	compile

.PHONY: compile
compile: ${BIN}

${BIN}: ${ALL_OBJ}
	${LDR} $(OPT) -o ${EXEDIR}cholla ${ALL_OBJ} ${LIB}

help:
	@echo This is the Cholla Makefile
	@echo Type 'make compile' to generate Cholla executable
	@echo Type 'make clean'   to remove '*.o' files
	@echo OBJ=$(OBJ)

.PHONY: clean
clean:
	rm -f *.o Makedepend $(BIN)

depend: Makedepend

Makedepend:
	${CC} -MM ${CFLAGS} ${SRC} > Makedepend


# this forces a rebuild of all objects, if code re-configure'd
include Makedepend
